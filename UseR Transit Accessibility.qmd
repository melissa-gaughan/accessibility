---
title: "Transit Accessibility"
format: pptx
editor: visual
---

## Agenda

-   Introductions

-   Overview of R at King County Metro

-   Two case studies:

    -   Transit accessibility

    -   Rider/Non-Rider Survey Analysis

-   Questions/Answers

::: notes
This may change. Planning to do introductions, frame the talk as one about why R/programming generally is useful in transit planning. Iteration, improvement, integration. Introduce case studies. Acknowledge that R is used on many other projects.
:::

## R at King County Metro

![Au: Allison Horst](images/allison_horst_code_community.png)

::: notes
Data science is evolving at KCM. We are building skills and internal support for rigorous analysis and the use of coding tools in our workflows. No one has a background in CS, so we take a "learn and teach on the job" approach to building a DS culture.
:::

## Transit Accessibility

**Transit Accessibility:** How many places someone can get to using transit in a certain amount of time from a their starting location.

::: notes
One of the many ways where we use R and our community of support is our accessibility analysis. Before diving in to how we do our analysis, I want to make sure that everyone knows what I mean when I'm talking about accessibility and why it's an important part of transit planning.
:::

## Transit Accessibility

![Au: Jarrett Walker Associates](images/jwalker_accessibility_1.png)

## Transit Accessibility

![Au: Jarrett Walker Associates](images/jwalker_accessibility_2.png)

::: notes
:::

## Transit Accessibility

![Au: Jarrett Walker Associates](images/jwalker_accessibility_3.png)

::: notes
:::

## Transit Accessibility

![Au: Jarrett Walker Associates](images/jwalker_accessibility_4.png)

::: notes
Accessibility is important to measure because it can determine how much of a person's travel needs can be completed on an existing or planned transit network. Metro's strategic plan calls for annual measurements in the change in county-wide transit accessibility.

At a theoretical level, accessibility is very simple. However, the process of measuring transit accessibility requires iteration. This is where R plays a critical role, as traditional transit planning tools require planners to manually select analysis locations, which is not possible at a county-wide scale.
:::

## r5R to the Rescue!

r5R is a network based routing tool that allows analysts to model time-based travel for different modes of transportation.

::: notes
r5R is a network based routing tool that uses a java backend, the Open Street Map Network and the GTFS to allow analysts to model time-based travel for different modes of transportation. Allows for use of different decay functions ( a quick trip to a destination is worth more than a long trip).
:::

## A quick look at r5r

-   Requires:

    -   Open Street Map network file

    -   origin and destination points

    -   General Transit Feed Specifications (GTFS)

-   Works well with the purrr library

-   Implements decay curves to model how people perceive opportunities (a quick trip to a destination is worth more than a long trip).

-   Full documentation available [here](https://ipeagit.github.io/r5r/index.html)

## r5r at King County

-   Community Assets Database for destinations

-   First calculated using a quarter mile hexagon map, then aggregated using population weighted interpolation

## Time for a demo!

https://king-county-metro.shinyapps.io/accessibility-demo/

## r5r Accessibility Function

```{r}
#| code-overflow: wrap
#| eval: false
#| echo: true
 ttm <- accessibility(r5r_core = r5r_core,
                            decay_function = "logistic", #
  origins = origins, 
  destinations = dest_hex_points, #                            
  opportunities_colname = c("grocery", "public_spaces")  , 
  mode =  c("WALK", "TRANSIT"), 
  departure_datetime = as.POSIXct(departure_datetime, format = "%d-%m-%Y %H:%M:%S"), 
  max_walk_time = 10, 
  time_window = 5L, 
  max_trip_duration = 45, 
  verbose = F, 
  decay_value = 15, 
  cutoffs = 30)
```

## Block Group Interpolation

```{r}
#| code-overflow: wrap
#| eval: false
#| echo: true
 interpolated_bg_access <- test %>% 
   select(-rowid) %>%
   interpolate_pw(to = block_groups, 
                  to_id = "GEO_ID_GRP", 
                  weights = blocks, 
                  weight_column = "POP20", 
                  crs = 2926, 
                  extensive = FALSE,
                  weight_placement = "surface")
```
